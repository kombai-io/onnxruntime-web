{"version":3,"file":"ort.wasm-core.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/version.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/wasm-utils.ts","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/../common/dist/cjs/backend-impl.js","webpack://ort/../common/dist/cjs/backend.js","webpack://ort/../common/dist/cjs/env-impl.js","webpack://ort/../common/dist/cjs/env.js","webpack://ort/../common/dist/cjs/index.js","webpack://ort/../common/dist/cjs/inference-session-impl.js","webpack://ort/../common/dist/cjs/inference-session.js","webpack://ort/../common/dist/cjs/onnx-value.js","webpack://ort/../common/dist/cjs/tensor-conversion-impl.js","webpack://ort/../common/dist/cjs/tensor-factory-impl.js","webpack://ort/../common/dist/cjs/tensor-impl.js","webpack://ort/../common/dist/cjs/tensor-utils-impl.js","webpack://ort/../common/dist/cjs/tensor.js","webpack://ort/../common/dist/cjs/version.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend, env} from 'onnxruntime-common';\nimport {version} from './version';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n\nenv.versions.web = version;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\n\nexport const version = '1.16.0';\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      checkLastError('Can\\'t create run options.');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a run config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\n\nlet runtimeInitialized: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      await initializeRuntime(env);\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof process !== 'undefined' && process.versions && process.versions.node) {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError, iterateExtraOptions} from './wasm-utils';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}.`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  checkLastError(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}.`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported execution provider: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          checkLastError(`Can't append execution provider: ${epName}.`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      checkLastError('Can\\'t create session options.');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          checkLastError(`Can't set a session config entry: ${key} - ${value}.`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(alloc => wasm._free(alloc));\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n// This file includes common definitions. They do NOT have dependency on the WebAssembly instance.\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float16':\n      return DataType.float16;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float16:\n      return 'float16';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float16':\n          return Uint16Array;\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\nimport {allocWasmString, checkLastError} from './wasm-utils';\n\n/**\n * get the input/output count of the session.\n * @param sessionHandle the handle representing the session. should be non-zero.\n * @returns a tuple including 2 numbers, representing the input count and output count.\n */\nconst getSessionInputOutputCount = (sessionHandle: number): [number, number] => {\n  const wasm = getInstance();\n  const stack = wasm.stackSave();\n  try {\n    const dataOffset = wasm.stackAlloc(8);\n    const errorCode = wasm._OrtGetInputOutputCount(sessionHandle, dataOffset, dataOffset + 4);\n    if (errorCode !== 0) {\n      checkLastError('Can\\'t get session input/output count.');\n    }\n    return [wasm.HEAP32[dataOffset / 4], wasm.HEAP32[dataOffset / 4 + 1]];\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    checkLastError('Can\\'t initialize onnxruntime.');\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  if (!BUILD_DEFS.DISABLE_WEBGPU) {\n    // init JSEP if available\n\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\n    const initJsep = require('./jsep/init').init;\n    await initJsep(getInstance(), env);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * allocate the memory and memcpy the model bytes, preparing for creating an instance of InferenceSession.\n * @returns a 2-elements tuple - the pointer and size of the allocated buffer\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  if (modelDataOffset === 0) {\n    throw new Error(`Can't create a session. failed to allocate a buffer of size ${model.byteLength}.`);\n  }\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\n/**\n * create an inference session using the prepared buffer containing the model data.\n * @param modelData a 2-elements tuple containing the pointer and size of the model data buffer.\n * @param options an optional session options object.\n * @returns a 3-elements tuple containing [session handle, input names, output names]\n */\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNamesUTF8Encoded = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          checkLastError('Can\\'t create a session.');\n        }\n\n        const [inputCount, outputCount] = getSessionInputOutputCount(sessionHandle);\n\n        const inputNames = [];\n        const outputNames = [];\n        for (let i = 0; i < inputCount; i++) {\n          const name = wasm._OrtGetInputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an input name.');\n          }\n          inputNamesUTF8Encoded.push(name);\n          inputNames.push(wasm.UTF8ToString(name));\n        }\n        for (let i = 0; i < outputCount; i++) {\n          const name = wasm._OrtGetOutputName(sessionHandle, i);\n          if (name === 0) {\n            checkLastError('Can\\'t get an output name.');\n          }\n          outputNamesUTF8Encoded.push(name);\n          outputNames.push(wasm.UTF8ToString(name));\n        }\n\n        activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n        return [sessionHandle, inputNames, outputNames];\n      } catch (e) {\n        inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n        outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n\n        if (sessionHandle !== 0) {\n          wasm._OrtReleaseSession(sessionHandle);\n        }\n        throw e;\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(alloc => wasm._free(alloc));\n      }\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot release session. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded] = session;\n\n  inputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  outputNamesUTF8Encoded.forEach(buf => wasm._OrtFree(buf));\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error(`cannot run inference. invalid session id: ${sessionId}`);\n  }\n  const [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded] = session;\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          checkLastError(`Can't create tensor for input[${i}].`);\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode !== 0) {\n        checkLastError('failed to call OrtRun().');\n      }\n\n      for (let i = 0; i < outputCount; i++) {\n        const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n        const beforeGetTensorDataStack = wasm.stackSave();\n        // stack allocate 4 pointer value\n        const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n        let type: Tensor.Type|undefined, dataOffset = 0;\n        try {\n          errorCode = wasm._OrtGetTensorData(\n              tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n          if (errorCode !== 0) {\n            checkLastError(`Can't access output tensor data on index ${i}.`);\n          }\n          let tensorDataIndex = tensorDataOffset / 4;\n          const dataType = wasm.HEAPU32[tensorDataIndex++];\n          dataOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n          const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n          const dims = [];\n          for (let i = 0; i < dimsLength; i++) {\n            dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n          }\n          wasm._OrtFree(dimsOffset);\n\n          const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n          type = tensorDataTypeEnumToString(dataType);\n          if (type === 'string') {\n            const stringData: string[] = [];\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < size; i++) {\n              const offset = wasm.HEAPU32[dataIndex++];\n              const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n              stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n            }\n            output.push([type, dims, stringData]);\n          } else {\n            const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n            const data = new typedArrayConstructor(size);\n            new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n            output.push([type, dims, data]);\n          }\n        } finally {\n          wasm.stackRestore(beforeGetTensorDataStack);\n          if (type === 'string' && dataOffset) {\n            wasm._free(dataOffset);\n          }\n          wasm._OrtReleaseTensor(tensor);\n        }\n      }\n\n      return output;\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(v => wasm._OrtReleaseTensor(v));\n    inputAllocs.forEach(p => wasm._free(p));\n\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    runOptionsAllocs.forEach(p => wasm._free(p));\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    checkLastError('Can\\'t get an profile file name.');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n\n/**\n * check web assembly API's last error and throw error if any error occurred.\n * @param message a message used when an error occurred.\n */\nexport const checkLastError = (message: string): void => {\n  const wasm = getInstance();\n\n  const stack = wasm.stackSave();\n  try {\n    const paramsOffset = wasm.stackAlloc(8);\n    wasm._OrtGetLastError(paramsOffset, paramsOffset + 4);\n    const errorCode = wasm.HEAP32[paramsOffset / 4];\n    const errorMessagePointer = wasm.HEAPU32[paramsOffset / 4 + 1];\n    const errorMessage = errorMessagePointer ? wasm.UTF8ToString(errorMessagePointer) : '';\n    throw new Error(`${message} ERROR_CODE: ${errorCode}, ERROR_MESSAGE: ${errorMessage}`);\n  } finally {\n    wasm.stackRestore(stack);\n  }\n};\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm = {})  {\n\nvar c;c||(c=typeof ortWasm !== 'undefined' ? ortWasm : {});var h,p;c.ready=new Promise((a,b)=>{h=a;p=b});var t=Object.assign({},c),w=\"./this.program\",y=\"object\"==typeof window,z=\"function\"==typeof importScripts,A=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,B=\"\",C,D,E;\nif(A){var fs=require(\"fs\"),F=require(\"path\");B=z?F.dirname(B)+\"/\":__dirname+\"/\";C=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):F.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};E=a=>{a=C(a,!0);a.buffer||(a=new Uint8Array(a));return a};D=(a,b,e,f=!0)=>{a=a.startsWith(\"file://\")?new URL(a):F.normalize(a);fs.readFile(a,f?void 0:\"utf8\",(g,k)=>{g?e(g):b(f?k.buffer:k)})};!c.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);c.inspect=()=>\"[Emscripten Module object]\"}else if(y||\nz)z?B=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(B=document.currentScript.src),_scriptDir&&(B=_scriptDir),0!==B.indexOf(\"blob:\")?B=B.substr(0,B.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):B=\"\",C=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},z&&(E=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),D=(a,b,e)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\n\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?b(f.response):e()};f.onerror=e;f.send(null)};var aa=c.print||console.log.bind(console),G=c.printErr||console.warn.bind(console);Object.assign(c,t);t=null;c.thisProgram&&(w=c.thisProgram);var H;c.wasmBinary&&(H=c.wasmBinary);var noExitRuntime=c.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&I(\"no native wasm support detected\");var J,K=!1,L,M,N,O;\nfunction ba(){var a=J.buffer;c.HEAP8=L=new Int8Array(a);c.HEAP16=new Int16Array(a);c.HEAP32=N=new Int32Array(a);c.HEAPU8=M=new Uint8Array(a);c.HEAPU16=new Uint16Array(a);c.HEAPU32=O=new Uint32Array(a);c.HEAPF32=new Float32Array(a);c.HEAPF64=new Float64Array(a)}var ca=[],da=[],ea=[];function fa(){var a=c.preRun.shift();ca.unshift(a)}var P=0,Q=null,R=null;\nfunction I(a){if(c.onAbort)c.onAbort(a);a=\"Aborted(\"+a+\")\";G(a);K=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");p(a);throw a;}function ha(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var S;S=\"ort-wasm.wasm\";if(!ha(S)){var ia=S;S=c.locateFile?c.locateFile(ia,B):B+ia}function ja(a){try{if(a==S&&H)return new Uint8Array(H);if(E)return E(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){I(b)}}\nfunction ka(a){if(!H&&(y||z)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>ja(a));if(D)return new Promise((b,e)=>{D(a,f=>b(new Uint8Array(f)),e)})}return Promise.resolve().then(()=>ja(a))}function la(a,b,e){return ka(a).then(f=>WebAssembly.instantiate(f,b)).then(f=>f).then(e,f=>{G(\"failed to asynchronously prepare wasm: \"+f);I(f)})}\nfunction ma(a,b){var e=S;return H||\"function\"!=typeof WebAssembly.instantiateStreaming||ha(e)||e.startsWith(\"file://\")||A||\"function\"!=typeof fetch?la(e,a,b):fetch(e,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,a).then(b,function(g){G(\"wasm streaming compile failed: \"+g);G(\"falling back to ArrayBuffer instantiation\");return la(e,a,b)}))}function T(a){for(;0<a.length;)a.shift()(c)}var na=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction oa(a,b,e){b>>>=0;var f=b+e;for(e=b;a[e]&&!(e>=f);)++e;if(16<e-b&&a.buffer&&na)return na.decode(a.subarray(b,e));for(f=\"\";b<e;){var g=a[b++];if(g&128){var k=a[b++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|k);else{var l=a[b++]&63;g=224==(g&240)?(g&15)<<12|k<<6|l:(g&7)<<18|k<<12|l<<6|a[b++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f}function U(a,b){return(a>>>=0)?oa(M,a,b):\"\"}\nfunction V(a){for(var b=0,e=0;e<a.length;++e){var f=a.charCodeAt(e);127>=f?b++:2047>=f?b+=2:55296<=f&&57343>=f?(b+=4,++e):b+=3}return b}\nfunction pa(a,b,e,f){e>>>=0;if(!(0<f))return 0;var g=e;f=e+f-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var q=a.charCodeAt(++k);l=65536+((l&1023)<<10)|q&1023}if(127>=l){if(e>=f)break;b[e++>>>0]=l}else{if(2047>=l){if(e+1>=f)break;b[e++>>>0]=192|l>>6}else{if(65535>=l){if(e+2>=f)break;b[e++>>>0]=224|l>>12}else{if(e+3>=f)break;b[e++>>>0]=240|l>>18;b[e++>>>0]=128|l>>12&63}b[e++>>>0]=128|l>>6&63}b[e++>>>0]=128|l&63}}b[e>>>0]=0;return e-g}\nfunction qa(a,b,e){return pa(a,M,b,e)}function W(a){return 0===a%4&&(0!==a%100||0===a%400)}var ra=[0,31,60,91,121,152,182,213,244,274,305,335],sa=[0,31,59,90,120,151,181,212,243,273,304,334];function ta(a){return(W(a.getFullYear())?ra:sa)[a.getMonth()]+a.getDate()-1}function xa(a){var b=V(a)+1,e=ya(b);e&&qa(a,e,b);return e}var X={};\nfunction za(){if(!Y){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:w||\"./this.program\"},b;for(b in X)void 0===X[b]?delete a[b]:a[b]=X[b];var e=[];for(b in a)e.push(b+\"=\"+a[b]);Y=e}return Y}var Y,Aa=[null,[],[]],Ba=[31,29,31,30,31,30,31,31,30,31,30,31],Ca=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Da(a){var b=Array(V(a)+1);pa(a,b,0,b.length);return b}\nfunction Ea(a,b,e,f){function g(d,m,n){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<m;)d=n[0]+d;return d}function k(d,m){return g(d,m,\"0\")}function l(d,m){function n(ua){return 0>ua?-1:0<ua?1:0}var x;0===(x=n(d.getFullYear()-m.getFullYear()))&&0===(x=n(d.getMonth()-m.getMonth()))&&(x=n(d.getDate()-m.getDate()));return x}function q(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function v(d){var m=d.ka;for(d=new Date((new Date(d.la+1900,0,1)).getTime());0<m;){var n=d.getMonth(),x=(W(d.getFullYear())?Ba:Ca)[n];if(m>x-d.getDate())m-=x-d.getDate()+1,d.setDate(1),11>n?d.setMonth(n+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+m);break}}n=new Date(d.getFullYear()+1,0,4);m=q(new Date(d.getFullYear(),\n0,4));n=q(n);return 0>=l(m,d)?0>=l(n,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}var u=N[f+40>>2>>>0];f={ra:N[f>>2>>>0],qa:N[f+4>>2>>>0],ma:N[f+8>>2>>>0],oa:N[f+12>>2>>>0],na:N[f+16>>2>>>0],la:N[f+20>>2>>>0],ga:N[f+24>>2>>>0],ka:N[f+28>>2>>>0],ta:N[f+32>>2>>>0],pa:N[f+36>>2>>>0],sa:u?U(u):\"\"};e=U(e);u={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in u)e=e.replace(new RegExp(r,\"g\"),u[r]);var va=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),wa=\"January February March April May June July August September October November December\".split(\" \");u={\"%a\":function(d){return va[d.ga].substring(0,3)},\"%A\":function(d){return va[d.ga]},\"%b\":function(d){return wa[d.na].substring(0,\n3)},\"%B\":function(d){return wa[d.na]},\"%C\":function(d){return k((d.la+1900)/100|0,2)},\"%d\":function(d){return k(d.oa,2)},\"%e\":function(d){return g(d.oa,2,\" \")},\"%g\":function(d){return v(d).toString().substring(2)},\"%G\":function(d){return v(d)},\"%H\":function(d){return k(d.ma,2)},\"%I\":function(d){d=d.ma;0==d?d=12:12<d&&(d-=12);return k(d,2)},\"%j\":function(d){for(var m=0,n=0;n<=d.na-1;m+=(W(d.la+1900)?Ba:Ca)[n++]);return k(d.oa+m,3)},\"%m\":function(d){return k(d.na+1,2)},\"%M\":function(d){return k(d.qa,\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(d){return 0<=d.ma&&12>d.ma?\"AM\":\"PM\"},\"%S\":function(d){return k(d.ra,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(d){return d.ga||7},\"%U\":function(d){return k(Math.floor((d.ka+7-d.ga)/7),2)},\"%V\":function(d){var m=Math.floor((d.ka+7-(d.ga+6)%7)/7);2>=(d.ga+371-d.ka-2)%7&&m++;if(m)53==m&&(n=(d.ga+371-d.ka)%7,4==n||3==n&&W(d.la)||(m=1));else{m=52;var n=(d.ga+7-d.ka-1)%7;(4==n||5==n&&W(d.la%400-1))&&m++}return k(m,2)},\"%w\":function(d){return d.ga},\"%W\":function(d){return k(Math.floor((d.ka+\n7-(d.ga+6)%7)/7),2)},\"%y\":function(d){return(d.la+1900).toString().substring(2)},\"%Y\":function(d){return d.la+1900},\"%z\":function(d){d=d.pa;var m=0<=d;d=Math.abs(d)/60;return(m?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":function(d){return d.sa},\"%%\":function(){return\"%\"}};e=e.replace(/%%/g,\"\\x00\\x00\");for(r in u)e.includes(r)&&(e=e.replace(new RegExp(r,\"g\"),u[r](f)));e=e.replace(/\\0\\0/g,\"%\");r=Da(e);if(r.length>b)return 0;L.set(r,a>>>0);return r.length-1}\nvar Fa={j:function(){I(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},c:function(){return 0},h:function(){},t:function(){},v:function(){},m:function(){return 0},H:function(){},C:function(){},G:function(){},g:function(){},u:function(){},r:function(){},I:function(){},s:function(){},i:function(){return!0},z:function(a,b){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[b>>2>>>0]=a.getUTCSeconds();N[b+4>>2>>>0]=a.getUTCMinutes();N[b+\n8>>2>>>0]=a.getUTCHours();N[b+12>>2>>>0]=a.getUTCDate();N[b+16>>2>>>0]=a.getUTCMonth();N[b+20>>2>>>0]=a.getUTCFullYear()-1900;N[b+24>>2>>>0]=a.getUTCDay();N[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},A:function(a,b){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[b>>2>>>0]=a.getSeconds();N[b+4>>2>>>0]=a.getMinutes();N[b+8>>2>>>0]=a.getHours();N[b+12>>2>>>0]=a.getDate();N[b+16>>2>>>0]=a.getMonth();N[b+20>>2>>>0]=a.getFullYear()-1900;N[b+24>>2>>>0]=a.getDay();N[b+\n28>>2>>>0]=ta(a)|0;N[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset(),f=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();N[b+32>>2>>>0]=(e!=f&&a.getTimezoneOffset()==Math.min(f,e))|0},B:function(a){var b=new Date(N[a+20>>2>>>0]+1900,N[a+16>>2>>>0],N[a+12>>2>>>0],N[a+8>>2>>>0],N[a+4>>2>>>0],N[a>>2>>>0],0),e=N[a+32>>2>>>0],f=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),k=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),\nl=Math.min(k,g);0>e?N[a+32>>2>>>0]=Number(g!=k&&l==f):0<e!=(l==f)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<e?l:g)-f)));N[a+24>>2>>>0]=b.getDay();N[a+28>>2>>>0]=ta(b)|0;N[a>>2>>>0]=b.getSeconds();N[a+4>>2>>>0]=b.getMinutes();N[a+8>>2>>>0]=b.getHours();N[a+12>>2>>>0]=b.getDate();N[a+16>>2>>>0]=b.getMonth();N[a+20>>2>>>0]=b.getYear();return b.getTime()/1E3|0},w:function(){return-52},x:function(){},o:function(a,b,e){function f(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?v[1]:\"GMT\"}\nvar g=(new Date).getFullYear(),k=new Date(g,0,1),l=new Date(g,6,1);g=k.getTimezoneOffset();var q=l.getTimezoneOffset();O[a>>2>>>0]=60*Math.max(g,q);N[b>>2>>>0]=Number(g!=q);a=f(k);b=f(l);a=xa(a);b=xa(b);q<g?(O[e>>2>>>0]=a,O[e+4>>2>>>0]=b):(O[e>>2>>>0]=b,O[e+4>>2>>>0]=a)},a:function(){I(\"\")},J:function(){I(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},e:function(){return Date.now()},p:function(){return 4294901760},b:A?()=>{var a=\nprocess.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),F:function(a,b,e){M.copyWithin(a>>>0,b>>>0,b+e>>>0)},n:function(a){var b=M.length;a>>>=0;if(4294901760<a)return!1;for(var e=1;4>=e;e*=2){var f=b*(1+.2/e);f=Math.min(f,a+100663296);var g=Math,k=g.min;f=Math.max(a,f);f+=(65536-f%65536)%65536;a:{var l=J.buffer;try{J.grow(k.call(g,4294901760,f)-l.byteLength+65535>>>16);ba();var q=1;break a}catch(v){}q=void 0}if(q)return!0}return!1},D:function(a,b){var e=0;za().forEach(function(f,g){var k=\nb+e;g=O[a+4*g>>2>>>0]=k;for(k=0;k<f.length;++k)L[g++>>0>>>0]=f.charCodeAt(k);L[g>>0>>>0]=0;e+=f.length+1});return 0},E:function(a,b){var e=za();O[a>>2>>>0]=e.length;var f=0;e.forEach(function(g){f+=g.length+1});O[b>>2>>>0]=f;return 0},d:function(){return 52},f:function(){return 52},k:function(){return 70},q:function(a,b,e,f){for(var g=0,k=0;k<e;k++){var l=O[b>>2>>>0],q=O[b+4>>2>>>0];b+=8;for(var v=0;v<q;v++){var u=M[l+v>>>0],r=Aa[a];0===u||10===u?((1===a?aa:G)(oa(r,0)),r.length=0):r.push(u)}g+=q}O[f>>\n2>>>0]=g;return 0},y:Ea,l:function(a,b,e,f){return Ea(a,b,e,f)}};\n(function(){function a(e){e=e.exports;c.asm=e;J=c.asm.K;ba();da.unshift(c.asm.L);P--;c.monitorRunDependencies&&c.monitorRunDependencies(P);if(0==P&&(null!==Q&&(clearInterval(Q),Q=null),R)){var f=R;R=null;f()}return e}var b={a:Fa};P++;c.monitorRunDependencies&&c.monitorRunDependencies(P);if(c.instantiateWasm)try{return c.instantiateWasm(b,a)}catch(e){G(\"Module.instantiateWasm callback failed with error: \"+e),p(e)}ma(b,function(e){a(e.instance)}).catch(p);return{}})();\nc._OrtInit=function(){return(c._OrtInit=c.asm.M).apply(null,arguments)};c._OrtGetLastError=function(){return(c._OrtGetLastError=c.asm.N).apply(null,arguments)};c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.O).apply(null,arguments)};c._OrtAppendExecutionProvider=function(){return(c._OrtAppendExecutionProvider=c.asm.P).apply(null,arguments)};c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.Q).apply(null,arguments)};\nc._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.R).apply(null,arguments)};c._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.S).apply(null,arguments)};c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.T).apply(null,arguments)};c._OrtGetInputOutputCount=function(){return(c._OrtGetInputOutputCount=c.asm.U).apply(null,arguments)};c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.V).apply(null,arguments)};\nc._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.W).apply(null,arguments)};c._OrtFree=function(){return(c._OrtFree=c.asm.X).apply(null,arguments)};c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Y).apply(null,arguments)};c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm.Z).apply(null,arguments)};c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm._).apply(null,arguments)};\nc._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.$).apply(null,arguments)};c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.aa).apply(null,arguments)};c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.ba).apply(null,arguments)};c._OrtRun=function(){return(c._OrtRun=c.asm.ca).apply(null,arguments)};c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.da).apply(null,arguments)};\nvar ya=c._malloc=function(){return(ya=c._malloc=c.asm.ea).apply(null,arguments)};c._free=function(){return(c._free=c.asm.fa).apply(null,arguments)};function Ga(){return(Ga=c.asm.ha).apply(null,arguments)}function Ha(){return(Ha=c.asm.ia).apply(null,arguments)}function Ia(){return(Ia=c.asm.ja).apply(null,arguments)}c.stackAlloc=Ia;c.stackSave=Ga;c.stackRestore=Ha;c.UTF8ToString=U;c.stringToUTF8=qa;c.lengthBytesUTF8=V;var Z;R=function Ja(){Z||Ka();Z||(R=Ja)};\nfunction Ka(){function a(){if(!Z&&(Z=!0,c.calledRun=!0,!K)){T(da);h(c);if(c.onRuntimeInitialized)c.onRuntimeInitialized();if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var b=c.postRun.shift();ea.unshift(b)}T(ea)}}if(!(0<P)){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)fa();T(ca);0<P||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){c.setStatus(\"\")},1);a()},1)):a())}}\nif(c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();Ka();\n\n\n  return ortWasm.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveBackend = exports.registerBackend = void 0;\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nconst registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\nexports.registerBackend = registerBackend;\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nconst resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\nexports.resolveBackend = resolveBackend;\n//# sourceMappingURL=backend-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerBackend = void 0;\nvar backend_impl_js_1 = require(\"./backend-impl.js\");\nObject.defineProperty(exports, \"registerBackend\", { enumerable: true, get: function () { return backend_impl_js_1.registerBackend; } });\n//# sourceMappingURL=backend.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst version_js_1 = require(\"./version.js\");\nlet logLevelValue = 'warning';\nexports.env = {\n    wasm: {},\n    webgl: {},\n    webgpu: {},\n    versions: { common: version_js_1.version },\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        logLevelValue = value;\n    },\n    get logLevel() {\n        return logLevelValue;\n    },\n};\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(exports.env, 'logLevel', { enumerable: true });\n//# sourceMappingURL=env-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst env_impl_js_1 = require(\"./env-impl.js\");\n/**\n * Represent a set of flags as a global singleton.\n */\nexports.env = env_impl_js_1.env;\n//# sourceMappingURL=env.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # ONNX Runtime JavaScript API\n *\n * ONNX Runtime JavaScript API is a unified API for all JavaScript usages, including the following NPM packages:\n *\n * - [onnxruntime-node](https://www.npmjs.com/package/onnxruntime-node)\n * - [onnxruntime-web](https://www.npmjs.com/package/onnxruntime-web)\n * - [onnxruntime-react-native](https://www.npmjs.com/package/onnxruntime-react-native)\n *\n * See also:\n * - [Get Started](https://onnxruntime.ai/docs/get-started/with-javascript.html)\n * - [Inference examples](https://github.com/microsoft/onnxruntime-inference-examples/tree/main/js)\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./backend.js\"), exports);\n__exportStar(require(\"./env.js\"), exports);\n__exportStar(require(\"./inference-session.js\"), exports);\n__exportStar(require(\"./tensor.js\"), exports);\n__exportStar(require(\"./onnx-value.js\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InferenceSession = void 0;\nconst backend_impl_js_1 = require(\"./backend-impl.js\");\nconst tensor_js_1 = require(\"./tensor.js\");\nclass InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof tensor_js_1.Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof tensor_js_1.Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof tensor_js_1.Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new tensor_js_1.Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    async release() {\n        return this.handler.dispose();\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await (0, backend_impl_js_1.resolveBackend)(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\nexports.InferenceSession = InferenceSession;\n//# sourceMappingURL=inference-session-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InferenceSession = void 0;\nconst inference_session_impl_js_1 = require(\"./inference-session-impl.js\");\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexports.InferenceSession = inference_session_impl_js_1.InferenceSession;\n//# sourceMappingURL=inference-session.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=onnx-value.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorToImageData = exports.tensorToDataURL = void 0;\n/**\n * implementation of Tensor.toDataURL()\n */\nconst tensorToDataURL = (tensor, options) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = tensor.dims[3];\n    canvas.height = tensor.dims[2];\n    const pixels2DContext = canvas.getContext('2d');\n    if (pixels2DContext != null) {\n        // Default values for height and width & format\n        let width;\n        let height;\n        if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n            width = tensor.dims[2];\n            height = tensor.dims[3];\n        }\n        else { // Default layout is NCWH\n            width = tensor.dims[3];\n            height = tensor.dims[2];\n        }\n        const inputformat = options?.format !== undefined ? options.format : 'RGB';\n        const norm = options?.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = [255, 255, 255, 255];\n        }\n        else {\n            if (typeof (norm.mean) === 'number') {\n                normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n            }\n            else {\n                normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                if (norm.mean[3] !== undefined) {\n                    normMean[3] = norm.mean[3];\n                }\n            }\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = [0, 0, 0, 0];\n        }\n        else {\n            if (typeof (norm.bias) === 'number') {\n                normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n            }\n            else {\n                normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                if (norm.bias[3] !== undefined) {\n                    normBias[3] = norm.bias[3];\n                }\n            }\n        }\n        const stride = height * width;\n        // Default pointer assignments\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGBA') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n            aTensorPointer = stride * 3;\n        }\n        else if (inputformat === 'RGB') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n        }\n        else if (inputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < height; i++) {\n            for (let j = 0; j < width; j++) {\n                const R = (tensor.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                const G = (tensor.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                const B = (tensor.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                const A = aTensorPointer === -1 ?\n                    255 :\n                    (tensor.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                pixels2DContext.fillRect(j, i, 1, 1);\n            }\n        }\n        return canvas.toDataURL();\n    }\n    else {\n        throw new Error('Can not access image data');\n    }\n};\nexports.tensorToDataURL = tensorToDataURL;\n/**\n * implementation of Tensor.toImageData()\n */\nconst tensorToImageData = (tensor, options) => {\n    const pixels2DContext = document.createElement('canvas').getContext('2d');\n    let image;\n    if (pixels2DContext != null) {\n        // Default values for height and width & format\n        let width;\n        let height;\n        let channels;\n        if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n            width = tensor.dims[2];\n            height = tensor.dims[1];\n            channels = tensor.dims[3];\n        }\n        else { // Default layout is NCWH\n            width = tensor.dims[3];\n            height = tensor.dims[2];\n            channels = tensor.dims[1];\n        }\n        const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n        const norm = options?.norm;\n        let normMean;\n        let normBias;\n        if (norm === undefined || norm.mean === undefined) {\n            normMean = [255, 255, 255, 255];\n        }\n        else {\n            if (typeof (norm.mean) === 'number') {\n                normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n            }\n            else {\n                normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                if (norm.mean[3] !== undefined) {\n                    normMean[3] = norm.mean[3];\n                }\n            }\n        }\n        if (norm === undefined || norm.bias === undefined) {\n            normBias = [0, 0, 0, 0];\n        }\n        else {\n            if (typeof (norm.bias) === 'number') {\n                normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n            }\n            else {\n                normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                if (norm.bias[3] !== undefined) {\n                    normBias[3] = norm.bias[3];\n                }\n            }\n        }\n        const stride = height * width;\n        if (options !== undefined) {\n            if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                throw new Error('Tensor format doesn\\'t match input tensor dims');\n            }\n        }\n        // Default pointer assignments\n        const step = 4;\n        let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGBA') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n            aTensorPointer = stride * 3;\n        }\n        else if (inputformat === 'RGB') {\n            rTensorPointer = 0;\n            gTensorPointer = stride;\n            bTensorPointer = stride * 2;\n        }\n        else if (inputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        image = pixels2DContext.createImageData(width, height);\n        for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n            image.data[rImagePointer] = (tensor.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n            image.data[gImagePointer] = (tensor.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n            image.data[bImagePointer] = (tensor.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n            image.data[aImagePointer] = aTensorPointer === -1 ?\n                255 :\n                (tensor.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n        }\n    }\n    else {\n        throw new Error('Can not access image data');\n    }\n    return image;\n};\nexports.tensorToImageData = tensorToImageData;\n//# sourceMappingURL=tensor-conversion-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorFromImage = exports.bufferToTensor = void 0;\nconst tensor_js_1 = require(\"./tensor.js\");\n/**\n * Create a new tensor object from image object\n *\n * @param buffer - Extracted image buffer data - assuming RGBA format\n * @param imageFormat - input image configuration - required configurations height, width, format\n * @param tensorFormat - output tensor configuration - Default is RGB format\n */\nconst bufferToTensor = (buffer, options) => {\n    if (buffer === undefined) {\n        throw new Error('Image buffer must be defined');\n    }\n    if (options.height === undefined || options.width === undefined) {\n        throw new Error('Image height and width must be defined');\n    }\n    if (options.tensorLayout === 'NHWC') {\n        throw new Error('NHWC Tensor layout is not supported yet');\n    }\n    const { height, width } = options;\n    const norm = options.norm ?? { mean: 255, bias: 0 };\n    let normMean;\n    let normBias;\n    if (typeof (norm.mean) === 'number') {\n        normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n    }\n    else {\n        normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n    }\n    if (typeof (norm.bias) === 'number') {\n        normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n    }\n    else {\n        normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n    }\n    const inputformat = options.format !== undefined ? options.format : 'RGBA';\n    // default value is RGBA since imagedata and HTMLImageElement uses it\n    const outputformat = options.tensorFormat !== undefined ?\n        (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n        'RGB';\n    const stride = height * width;\n    const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n    // Default pointer assignments\n    let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n    let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n    // Updating the pointer assignments based on the input image format\n    if (inputformat === 'RGB') {\n        step = 3;\n        rImagePointer = 0;\n        gImagePointer = 1;\n        bImagePointer = 2;\n        aImagePointer = -1;\n    }\n    // Updating the pointer assignments based on the output tensor format\n    if (outputformat === 'RGBA') {\n        aTensorPointer = stride * 3;\n    }\n    else if (outputformat === 'RBG') {\n        rTensorPointer = 0;\n        bTensorPointer = stride;\n        gTensorPointer = stride * 2;\n    }\n    else if (outputformat === 'BGR') {\n        bTensorPointer = 0;\n        gTensorPointer = stride;\n        rTensorPointer = stride * 2;\n    }\n    for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n        float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n        float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n        float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n        if (aTensorPointer !== -1 && aImagePointer !== -1) {\n            float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n        }\n    }\n    // Float32Array -> ort.Tensor\n    const outputTensor = outputformat === 'RGBA' ? new tensor_js_1.Tensor('float32', float32Data, [1, 4, height, width]) :\n        new tensor_js_1.Tensor('float32', float32Data, [1, 3, height, width]);\n    return outputTensor;\n};\nexports.bufferToTensor = bufferToTensor;\n/**\n * implementation of Tensor.fromImage().\n */\nconst tensorFromImage = async (image, options) => {\n    // checking the type of image object\n    const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n    const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n    const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n    const isString = typeof image === 'string';\n    let data;\n    let bufferToTensorOptions = options ?? {};\n    // filling and checking image configuration options\n    if (isHTMLImageEle) {\n        // HTMLImageElement - image object - format is RGBA by default\n        const canvas = document.createElement('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            let height = image.height;\n            let width = image.width;\n            if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            if (options !== undefined) {\n                bufferToTensorOptions = options;\n                if (options.tensorFormat !== undefined) {\n                    throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                }\n                else {\n                    bufferToTensorOptions.tensorFormat = 'RGBA';\n                }\n                bufferToTensorOptions.height = height;\n                bufferToTensorOptions.width = width;\n            }\n            else {\n                bufferToTensorOptions.tensorFormat = 'RGBA';\n                bufferToTensorOptions.height = height;\n                bufferToTensorOptions.width = width;\n            }\n            pixels2DContext.drawImage(image, 0, 0);\n            data = pixels2DContext.getImageData(0, 0, width, height).data;\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    else if (isImageDataEle) {\n        let height;\n        let width;\n        if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n            height = options.resizedHeight;\n            width = options.resizedWidth;\n        }\n        else {\n            height = image.height;\n            width = image.width;\n        }\n        if (options !== undefined) {\n            bufferToTensorOptions = options;\n        }\n        bufferToTensorOptions.format = 'RGBA';\n        bufferToTensorOptions.height = height;\n        bufferToTensorOptions.width = width;\n        if (options !== undefined) {\n            const tempCanvas = document.createElement('canvas');\n            tempCanvas.width = width;\n            tempCanvas.height = height;\n            const pixels2DContext = tempCanvas.getContext('2d');\n            if (pixels2DContext != null) {\n                pixels2DContext.putImageData(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else {\n            data = image.data;\n        }\n    }\n    else if (isImageBitmap) {\n        // ImageBitmap - image object - format must be provided by user\n        if (options === undefined) {\n            throw new Error('Please provide image config with format for Imagebitmap');\n        }\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        if (pixels2DContext != null) {\n            const height = image.height;\n            const width = image.width;\n            pixels2DContext.drawImage(image, 0, 0, width, height);\n            data = pixels2DContext.getImageData(0, 0, width, height).data;\n            bufferToTensorOptions.height = height;\n            bufferToTensorOptions.width = width;\n            return (0, exports.bufferToTensor)(data, bufferToTensorOptions);\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    else if (isString) {\n        return new Promise((resolve, reject) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            if (!image || !context) {\n                return reject();\n            }\n            const newImage = new Image();\n            newImage.crossOrigin = 'Anonymous';\n            newImage.src = image;\n            newImage.onload = () => {\n                canvas.width = newImage.width;\n                canvas.height = newImage.height;\n                context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                bufferToTensorOptions.height = canvas.height;\n                bufferToTensorOptions.width = canvas.width;\n                resolve((0, exports.bufferToTensor)(img.data, bufferToTensorOptions));\n            };\n        });\n    }\n    else {\n        throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n    if (data !== undefined) {\n        return (0, exports.bufferToTensor)(data, bufferToTensorOptions);\n    }\n    else {\n        throw new Error('Input data provided is not supported - aborted tensor creation');\n    }\n};\nexports.tensorFromImage = tensorFromImage;\n//# sourceMappingURL=tensor-factory-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tensor = void 0;\nconst tensor_conversion_impl_js_1 = require(\"./tensor-conversion-impl.js\");\nconst tensor_factory_impl_js_1 = require(\"./tensor-factory-impl.js\");\nconst tensor_utils_impl_js_1 = require(\"./tensor-utils-impl.js\");\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['float16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\nclass Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    if (arg0 === 'float16') {\n                        // Throw error here because when user try to use number array as data,\n                        // e.g. new Tensor('float16', [1, 2, 3, 4], dims)), it will actually call\n                        // Uint16Array.from(arg1) which generates wrong data.\n                        throw new TypeError('Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.');\n                    }\n                    else if (arg0 === 'uint64' || arg0 === 'int64') {\n                        // use 'as any' here because:\n                        // 1. TypeScript's check on type of 'Array.isArray()' does not work with readonly arrays.\n                        // see https://github.com/microsoft/TypeScript/issues/17002\n                        // 2. TypeScript's check on union type of '(BigInt64ArrayConstructor|BigUint64ArrayConstructor).from()' does\n                        // not accept parameter mapFn.\n                        // 3. parameters of 'SupportedTypedArrayConstructors.from()' does not match the requirement of the union\n                        // type.\n                        // assume 'arg1' is of type \"readonly number[]|readonly bigint[]\" here.\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        data = typedArrayConstructor.from(arg1, BigInt);\n                    }\n                    else {\n                        // assume 'arg1' is of type \"readonly number[]\" here.\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        data = typedArrayConstructor.from(arg1);\n                    }\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = (0, tensor_utils_impl_js_1.calculateSize)(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    static async fromImage(image, options) {\n        return (0, tensor_factory_impl_js_1.tensorFromImage)(image, options);\n    }\n    // #endregion\n    // #region conversions\n    toDataURL(options) {\n        return (0, tensor_conversion_impl_js_1.tensorToDataURL)(this, options);\n    }\n    toImageData(options) {\n        return (0, tensor_conversion_impl_js_1.tensorToImageData)(this, options);\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return (0, tensor_utils_impl_js_1.tensorReshape)(this, dims);\n    }\n}\nexports.Tensor = Tensor;\n//# sourceMappingURL=tensor-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tensorReshape = exports.calculateSize = void 0;\nconst tensor_js_1 = require(\"./tensor.js\");\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexports.calculateSize = calculateSize;\n/**\n * implementation of Tensor.reshape()\n */\nconst tensorReshape = (tensor, dims) => new tensor_js_1.Tensor(tensor.type, tensor.data, dims);\nexports.tensorReshape = tensorReshape;\n//# sourceMappingURL=tensor-utils-impl.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tensor = void 0;\nconst tensor_impl_js_1 = require(\"./tensor-impl.js\");\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexports.Tensor = tensor_impl_js_1.Tensor;\n//# sourceMappingURL=tensor.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\n// This file is generated by /js/scripts/update-version.ts\n// Do not modify file content manually.\nexports.version = '1.16.0';\n//# sourceMappingURL=version.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(57);\n"],"names":["root","factory","exports","module","define","amd","self","env","wasm","initTimeout","simd","proxy","numThreads","Number","isInteger","numCpuLogicalCores","navigator","cpus","length","hardwareConcurrency","Math","min","ceil","async","initializeWebAssemblyInstance","pathOrBuffer","options","handler","OnnxruntimeWebAssemblySessionHandler","loadModel","Promise","resolve","wasmBackend","registerBackend","versions","web","version","document","currentScript","src","initializeWebAssembly","initializeRuntime","core","initRuntime","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","run","inputIndices","inputs","outputIndices","endProfiling","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","undefined","logSeverityLevel","Error","logVerbosityLevel","terminate","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","checkLastError","extra","iterateExtraOptions","WeakSet","key","value","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","e","_OrtReleaseRunOptions","forEach","alloc","_free","runtimeInitialized","path","response","fetch","arrayBuffer","Uint8Array","process","node","promisify","readFile","this","inputNames","outputNames","modelData","feeds","fetches","inputArray","Object","entries","kvp","name","tensor","index","indexOf","push","outputs","map","t","type","dims","data","result","i","Tensor","startProfiling","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","executionProviders","some","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","webnnOptions","deviceType","_OrtAddSessionConfigEntry","powerPreference","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtReleaseSessionOptions","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","getTensorElementSize","dateType","tensorTypeToTypedArrayConstructor","Uint16Array","Float32Array","Int8Array","Int16Array","Int32Array","Float64Array","Uint32Array","BigInt64Array","BigUint64Array","logLevelStringToEnum","logLevel","loggingLevel","_OrtInit","activeSessions","Map","modelDataOffset","_malloc","byteLength","HEAPU8","set","sessionHandle","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtCreateSession","inputCount","outputCount","stack","stackSave","dataOffset","stackAlloc","_OrtGetInputOutputCount","HEAP32","stackRestore","getSessionInputOutputCount","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","buf","_OrtFree","_OrtReleaseSession","get","delete","runOptionsAllocs","inputValues","inputAllocs","dataType","dataByteLength","Array","isArray","dataIndex","TypeError","HEAPU32","buffer","byteOffset","dimsOffset","dimIndex","d","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","errorCode","_OrtRun","runPromise","jsepRunPromise","then","output","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","dimsLength","size","reduce","a","b","stringData","offset","maxBytesToRead","subarray","_OrtReleaseTensor","v","p","profileFileName","_OrtEndProfiling","extractTransferableBuffers","tensors","buffers","ortWasmFactory","ortWasmFactoryThreaded","initialized","initializing","aborted","flags","timeout","useThreads","SharedArrayBuffer","MessageChannel","port1","postMessage","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPaths","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","setTimeout","reject","locateFile","fileName","scriptDirectory","endsWith","what","race","dispose","PThread","terminateAllThreads","dataLength","lengthBytesUTF8","stringToUTF8","prefix","seen","has","add","toString","message","paramsOffset","_OrtGetLastError","errorMessagePointer","errorMessage","_scriptDir","ortWasm","__filename","c","h","ready","C","D","E","assign","w","y","window","z","importScripts","A","B","fs","F","dirname","__dirname","startsWith","URL","normalize","readFileSync","f","g","k","thisProgram","argv","replace","slice","inspect","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","onload","status","onerror","H","aa","print","console","log","bind","G","printErr","warn","wasmBinary","noExitRuntime","I","J","L","M","N","O","K","ba","HEAP8","HEAP16","HEAPU16","HEAPF32","HEAPF64","ca","da","ea","fa","preRun","shift","unshift","S","P","Q","R","onAbort","RuntimeError","ha","ia","ja","la","credentials","ok","catch","ka","instantiate","T","na","TextDecoder","oa","decode","String","fromCharCode","l","U","V","charCodeAt","pa","qa","W","ra","sa","ta","getFullYear","getMonth","getDate","xa","ya","X","za","Y","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","_","Aa","Ba","Ca","Ea","m","n","ua","x","q","getDay","Date","getTime","setDate","setMonth","setFullYear","u","r","ma","ga","RegExp","va","split","wa","substring","floor","abs","includes","Da","Fa","j","s","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","max","setTime","getYear","o","toTimeString","match","now","hrtime","performance","copyWithin","grow","call","asm","monitorRunDependencies","clearInterval","instantiateWasm","instantiateStreaming","instance","apply","arguments","Z","$","Ga","Ha","Ia","Ka","calledRun","onRuntimeInitialized","postRun","setStatus","Ja","preInit","pop","defineProperty","resolveBackend","backends","backendsSortedByPriority","backend","priority","init","createSessionHandler","currentBackend","splice","backendHints","backendNames","errors","backendName","backendInfo","isInitializing","initPromise","err","join","backend_impl_js_1","enumerable","version_js_1","logLevelValue","webgl","webgpu","common","env_impl_js_1","__createBinding","create","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__exportStar","prototype","hasOwnProperty","InferenceSession","tensor_js_1","constructor","arg1","arg2","isFetchesEmpty","RangeError","isFetches","arg1Keys","getOwnPropertyNames","results","returnValue","static","arg0","arg3","filePathOrUint8Array","ArrayBuffer","isSafeInteger","inference_session_impl_js_1","tensorToImageData","tensorToDataURL","canvas","createElement","width","height","pixels2DContext","getContext","tensorLayout","inputformat","format","norm","normMean","normBias","mean","bias","stride","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","fillStyle","fillRect","toDataURL","image","channels","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","createImageData","tensorFromImage","bufferToTensor","outputformat","tensorFormat","float32Data","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","bufferToTensorOptions","resizedHeight","resizedWidth","drawImage","getImageData","context","newImage","Image","crossOrigin","img","tempCanvas","putImageData","tensor_conversion_impl_js_1","tensor_factory_impl_js_1","tensor_utils_impl_js_1","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","isBigInt64ArrayAvailable","from","isBigUint64ArrayAvailable","checkBigInt","typedArrayConstructor","BigInt","firstElementType","mappedType","calculateSize","toImageData","reshape","tensorReshape","dim","tensor_impl_js_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}